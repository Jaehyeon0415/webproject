.form-group
  label(for="title")
    h2 제목
  input.form-control(type="text", name="title", placeholder="What's your Event Title?", value=eventcard.title)
.form-group
  label(for="picture")
    h2 이미지
  input.form-control-file#picture(type="file", name="picture")
.form-group
  label(for="locate")
    h2 장소
  #map.col.col-lg-8.col-md-10.col-sm-12.mt-3.mb-3.mx-auto.newmap
            script(type="text/javascript" src="//dapi.kakao.com/v2/maps/sdk.js?appkey=f17f13a2501e093453f66bc822645a83&libraries=services")
            script.
                var container = document.getElementById('map');
                var options = {
                    center: new daum.maps.LatLng(33.450701, 126.570667),
                    level: 3
                };
                var map = new daum.maps.Map(container, options);
                var mapContainer = document.getElementById('map'), // 지도를 표시할 div 
                  mapOption = {
                      center: new daum.maps.LatLng(37.566826, 126.9786567), // 지도의 중심좌표
                      level: 1 // 지도의 확대 레벨
                  };  
                // 지도를 생성합니다    
                var map = new daum.maps.Map(mapContainer, mapOption); 
                // 주소-좌표 변환 객체를 생성합니다
                var geocoder = new daum.maps.services.Geocoder();
                var marker = new daum.maps.Marker(), // 클릭한 위치를 표시할 마커입니다
                    infowindow = new daum.maps.InfoWindow({zindex:1}); // 클릭한 위치에 대한 주소를 표시할 인포윈도우입니다

                // 현재 지도 중심좌표로 주소를 검색해서 지도 좌측 상단에 표시합니다
                searchAddrFromCoords(map.getCenter(), displayCenterInfo);

                // 지도를 클릭했을 때 클릭 위치 좌표에 대한 주소정보를 표시하도록 이벤트를 등록합니다
                daum.maps.event.addListener(map, 'click', function(mouseEvent) {
                    searchDetailAddrFromCoords(mouseEvent.latLng, function(result, status) {
                        if (status === daum.maps.services.Status.OK) {
                            var detailAddr = !!result[0].road_address ? result[0].road_address.address_name : '';
                            //detailAddr += '<div>지번 주소 : ' + result[0].address.address_name + '</div>';
                            
                            var content = '<div style="width:150px;text-align:center;padding:6px 0;">' +     
                                              detailAddr + 
                                          '</div>';
                            // 마커를 클릭한 위치에 표시합니다 
                            marker.setPosition(mouseEvent.latLng);
                            marker.setMap(map);

                            // 인포윈도우에 클릭한 위치에 대한 법정동 상세 주소정보를 표시합니다
                            infowindow.setContent(content);
                            infowindow.open(map, marker);
                        }   
                    });
                });

                // 중심 좌표나 확대 수준이 변경됐을 때 지도 중심 좌표에 대한 주소 정보를 표시하도록 이벤트를 등록합니다
                daum.maps.event.addListener(map, 'idle', function() {
                    searchAddrFromCoords(map.getCenter(), displayCenterInfo);
                });
                function searchAddrFromCoords(coords, callback) {
                    // 좌표로 행정동 주소 정보를 요청합니다
                    geocoder.coord2RegionCode(coords.getLng(), coords.getLat(), callback);         
                }
                function searchDetailAddrFromCoords(coords, callback) {
                    // 좌표로 법정동 상세 주소 정보를 요청합니다
                    geocoder.coord2Address(coords.getLng(), coords.getLat(), callback);
                }
                // 지도 좌측상단에 지도 중심좌표에 대한 주소정보를 표출하는 함수입니다
                function displayCenterInfo(result, status) {
                    if (status === daum.maps.services.Status.OK) {
                        var infoDiv = document.getElementById('centerAddr');
                        for(var i = 0; i < result.length; i++) {
                            // 행정동의 region_type 값은 'H' 이므로
                            if (result[i].region_type === 'H') {
                                infoDiv.innerHTML = result[i].address_name;
                                break;
                            }
                        }
                    }    
                }
  input.form-control(type="text", name="locate", placeholder="Please write address", value=eventcard.locate)
.form-group
    h4 날짜
    .row.col-12
      .col-4
        label(for="date")
        input.form-control(type="text", name="date" placeholder="Date")
      .col-4
        label(for="start_time")
        input.form-control(type="text", name="start_time" placeholder="Start time")
      .col-4
        label(for="sinish_time")
        input.form-control(type="text", name="finish_time" placeholder="Finish time")
    //small#emailHelp.form-text.text-muted ex) 오전 5:30 - 530, 오후 5:30 - 1730
.form-group
  label(for="content1")
    h2 상세 설명
  textarea.form-control#editor1(name="content1", value=eventcard.content1)
  script.
    ClassicEditor
        .create( document.querySelector( '#editor1' ) )
        .catch( error => {
            console.error( error );
        } );

.form-group
  label(for="group_name")
    h2 등록 조직 이름
  input.form-control(type="text", name="group_name", placeholder="Write group name", value=eventcard.group_name)
.form-group
  label(for="content2")
    h2 등록 조직 설명
  textarea.form-control#editor2(name="content2", value=eventcard.content2)
  script.
    ClassicEditor
        .create( document.querySelector( '#editor2' ) )
        .catch( error => {
            console.error( error );
        } );
.form-group
  .row
    .col-lg-6
      .input-group
        span.input-group-addon
          input(type="checkbox" name="free" aria-label="Checkbox for following text input")
          h5.ml-2.text-center 무료 행사
    |
    .col-lg-6
      .input-group
        span.input-group-addon
          input(type="checkbox" name="charge" aria-label="Checkbox for following text input")
          h5.ml-2.text-center 유료 행사
        input.form-control(type="text" aria-label="Text input with checkbox" name="money" placeholder="How much?")

  